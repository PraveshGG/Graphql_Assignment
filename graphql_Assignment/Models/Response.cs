// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using graphql_Assignment.Models;
//
//    var response = Response.FromJson(jsonString);

namespace graphql_Assignment.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;


    public class Response
    {
        public string title { get; set; }
        public string director { get; set; }
    }

    //public partial class Response
    //{
    //    [JsonProperty("data")]
    //    public Data Data { get; set; }
    //}

    //public partial class Data
    //{
    //    [JsonProperty("allFilms")]
    //    public AllFilms AllFilms { get; set; }
    //}

    //public partial class AllFilms
    //{
    //    [JsonProperty("films")]
    //    public List<Film> Films { get; set; }
    //}

    //public partial class Film
    //{
    //    [JsonProperty("title")]
    //    public string Title { get; set; }

    //    [JsonProperty("director")]
    //    public string Director { get; set; }
    //}

    //public partial class Response
    //{
    //    public static Response FromJson(string json) => JsonConvert.DeserializeObject<Response>(json, graphql_Assignment.Models.Converter.Settings);
    //}

    //public static class Serialize
    //{
    //    public static string ToJson(this Response self) => JsonConvert.SerializeObject(self, graphql_Assignment.Models.Converter.Settings);
    //}

    //internal static class Converter
    //{
    //    public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
    //    {
    //        MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
    //        DateParseHandling = DateParseHandling.None,
    //        Converters =
    //        {
    //            new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
    //        },
    //    };
    //}
}
